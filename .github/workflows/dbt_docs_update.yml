name: docs_update

on:
  workflow_call:

env:
  USE_VARS: "${{ vars.USE_VARS }}"
  DBT_PROFILES_DIR: "${{ vars.DBT_PROFILES_DIR }}"
  DBT_VERSION: "${{ vars.DBT_VERSION }}"
  ACCOUNT: "${{ vars.ACCOUNT }}"
  ROLE: "${{ vars.ROLE }}"
  USER: "${{ vars.USER }}"
  PASSWORD: "${{ secrets.PASSWORD }}"
  REGION: "${{ vars.REGION }}"
  DATABASE: "${{ vars.DATABASE }}"
  WAREHOUSE: "${{ vars.WAREHOUSE }}"
  SCHEMA: "${{ vars.SCHEMA }}"

jobs:
  scheduled_run:
    name: docs_update
    runs-on: ubuntu-latest
    environment:
      name: workflow_prod

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: overwrite env vars
        if: ${{ env.USE_VARS == 'TRUE' }}
        run: |
          echo "DBT_VERSION=${{ vars.DBT_VERSION }}" >> $GITHUB_ENV
          echo "DBT_PROFILES_DIR=${{ vars.DBT_PROFILES_DIR }}" >> $GITHUB_ENV
          echo "ACCOUNT=${{ vars.ACCOUNT }}" >> $GITHUB_ENV
          echo "ROLE=${{ vars.ROLE }}" >> $GITHUB_ENV
          echo "USER=${{ vars.USER }}" >> $GITHUB_ENV
          echo "REGION=${{ vars.REGION }}" >> $GITHUB_ENV
          echo "DATABASE=${{ vars.DATABASE }}" >> $GITHUB_ENV
          echo "SCHEMA=${{ vars.SCHEMA }}" >> $GITHUB_ENV

      - name: install dependencies
        run: |
          pip install dbt-snowflake==${{ vars.DBT_VERSION }}
          dbt deps

      - name: refresh ddl for datashare
        run: |
          cnt=$(dbt ls -m fsc_utils.datashare._datashare___create_gold | wc -l ); if [ $cnt -eq 1 ]; then dbt run -m fsc_utils.datashare._datashare___create_gold; fi;

      - name: checkout docs branch
        run: |
          git checkout -B docs origin/main

      - name: generate dbt docs
        run: dbt docs generate -t prod

      - name: move files to docs directory
        run: |
          mkdir -p ./docs
          cp target/{catalog.json,manifest.json,index.html} docs/
      - name: clean up target directory
        run: dbt clean

      - name: check for changes
        run: git status

      - name: stage changed files
        run: git add .

      - name: commit changed files
        run: |
          git config user.email "abc@xyz"
          git config user.name "github-actions"
          git commit -am "Auto-update docs"
      - name: push changes to docs
        run: |
          git push -f --set-upstream origin docs
